---

- hosts: all
  user: vagrant
  become: yes
  become_method : sudo
  become_user: root
  vars:
  tasks:
    - name: "backup repo config"
      command: mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup

    - name: "add aliyun repo"
      command: wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo

    - name: "make cache"
      command: yum makecache

    - name: "install software"
      command: yum install -y man passwd sudo tar which git mlocate links make bzip2 net-tools \
                              autoconf automake libtool m4 gcc gcc-c++ gdb bison flex gperf maven indent \
                              libuuid-devel krb5-devel libgsasl-devel expat-devel libxml2-devel \
                              perl-ExtUtils-Embed pam-devel python-devel libcurl-devel snappy-devel \
                              thrift-devel libyaml-devel libevent-devel bzip2-devel openssl-devel \
                              openldap-devel protobuf-devel readline-devel net-snmp-devel apr-devel \
                              libesmtp-devel python-pip json-c-devel \
                              java-1.8.0-openjdk-devel lcov cmake \
                              openssh-clients openssh-server perl-JSON perl-Env

    - name: "instal software"
      command: pip --retries=50 --timeout=300 install pycrypto

    - name: "Ensure /etc/hosts dont have 127.0.0.1 node1 config"
      command: sed -i '/^127.0.0.1.*node/d' /etc/hosts

    - name: Create ssh key 
      shell: echo y | ssh-keygen -t rsa -N '' -f /root/.ssh/id_rsa

    - name: Collect ssh keys
      shell: cat ~/.ssh/id_rsa.pub
      register: ssh_keys

    - name: check keys
      debug: msg="{{ ssh_keys.stdout }}"

    - name: clean authorized_key
      shell: echo "" > ~/.ssh/authorized_keys

    - name: deploy keys on all servers
      authorized_key: 
        user: root 
        key: "{{ item[0] }}"
      delegate_to: "{{ item[1] }}"
      with_nested:
        - "{{ ssh_keys.stdout }}"
        - "{{ groups['hadoop'] }}"

    - name: For each host, scan for its ssh public key
      command: "ssh-keyscan -t rsa {{ item }}"
      register: hosts
      with_items: "{{ groups['hadoop'] }}"

    - name: check hosts
      debug: msg="{{ hosts.results }}"

    - name: deploy hosts on all servers
      known_hosts:
        name: "{{ item.item }}"
        key: "{{ item.stdout }}"
        path: "/root/.ssh/known_hosts"
      with_items: '{{ hosts.results }}'

    - name: For each host, scan for its ssh public key, use ipaddress instead of hostname
      command: "ssh-keyscan -t rsa {{ hostvars[item].ansible_enp0s8.ipv4.address }}"
      register: hosts
      with_items: "{{ groups['hadoop'] }}"

    - name: check hosts
      debug: msg="{{ hosts.results }}"

    - name: deploy hosts on all servers
      known_hosts:
        name: "{{ hostvars[item.item].ansible_enp0s8.ipv4.address }}"
        key: "{{ item.stdout }}"
        path: "/root/.ssh/known_hosts"
      with_items: '{{ hosts.results }}'

    - name: replace the maven config
      template: src={{ item }} dest="/etc/maven/{{ item }}" owner=root group=root mode=0644
      with_items:
        - settings.xml
